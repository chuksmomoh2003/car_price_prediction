version: 2.1

executors:
  python-executor:
    docker:
      - image: circleci/python:3.10
    working_directory: ~/repo

jobs:
  build:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Build Docker image
          command: docker build -t car-price:v2 .

  push-docker-image:
    executor: python-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Authenticate to Google Artifact Registry
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode -i > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud auth configure-docker us-central1-docker.pkg.dev
      - run:
          name: Tag Docker image
          command: docker tag car-price:v2 us-central1-docker.pkg.dev/hypnotic-guard-436705-n3/car-price/car-price:v2
      - run:
          name: Push Docker image to Google Artifact Registry
          command: docker push us-central1-docker.pkg.dev/hypnotic-guard-436705-n3/car-price/car-price:v2

  deploy:
    executor: python-executor
    steps:
      - run:
          name: Install gcloud and kubectl
          command: |
            echo "Installing Google Cloud SDK..."
            echo "If you want to re-run this step, remember to clear the cache to avoid conflicts with existing installations."
            echo $GCLOUD_SERVICE_KEY | base64 --decode -i > ${HOME}/gcloud-service-key.json
            curl https://sdk.cloud.google.com | bash -s -- --disable-prompts --quiet
            source ${HOME}/google-cloud-sdk/path.bash.inc
            gcloud components install kubectl --quiet
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud config set project YOUR_PROJECT_ID
            gcloud container clusters get-credentials YOUR_CLUSTER_NAME --region YOUR_CLUSTER_REGION
      - run:
          name: Update Kubernetes deployment
          command: |
            DOCKER_TAG=$(docker images car-price:v2 --format '{{.Tag}}')
            kubectl set image deployment/car-price-deployment car-price-container=us-central1-docker.pkg.dev/hypnotic-guard-436705-n3/car-price/car-price:${DOCKER_TAG}

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - push-docker-image:
          requires:
            - build
      - deploy:
          requires:
            - push-docker

